{"ast":null,"code":"var _jsxFileName = \"/Users/oss/Desktop/Pet_project/snake/src/App.js\";\nimport React, { Component } from 'react';\nimport { Grid, Button, Container, FormGroup, FormControlLabel, Switch } from '@material-ui/core';\nimport './App.css';\nimport Food from './Food';\nimport Snake from './Snake';\nimport Trap from './Trap';\n\nconst getRandomCoordinates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  return [x, y];\n};\n\nconst initialState = {\n  food: getRandomCoordinates(),\n  speed: 100,\n  direction: 'RIGHT',\n  snakeDots: [[0, 0], [2, 0]],\n  play: false,\n  trap: getRandomCoordinates(),\n  easy: true,\n  medium: false\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n\n    this.onKeyDown = e => {\n      e = e || window.event;\n\n      if (this.state.direction === 'UP') {\n        switch (e.keyCode) {\n          case 37:\n            this.setState({\n              direction: 'LEFT'\n            });\n            break;\n\n          case 39:\n            this.setState({\n              direction: 'RIGHT'\n            });\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      if (this.state.direction === 'DOWN') {\n        switch (e.keyCode) {\n          case 37:\n            this.setState({\n              direction: 'LEFT'\n            });\n            break;\n\n          case 39:\n            this.setState({\n              direction: 'RIGHT'\n            });\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      if (this.state.direction === 'LEFT') {\n        switch (e.keyCode) {\n          case 38:\n            this.setState({\n              direction: 'UP'\n            });\n            break;\n\n          case 40:\n            this.setState({\n              direction: 'DOWN'\n            });\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      if (this.state.direction === 'RIGHT') {\n        switch (e.keyCode) {\n          case 38:\n            this.setState({\n              direction: 'UP'\n            });\n            break;\n\n          case 40:\n            this.setState({\n              direction: 'DOWN'\n            });\n            break;\n\n          default:\n            break;\n        }\n      }\n    };\n\n    this.moveSnake = () => {\n      let dots = [...this.state.snakeDots];\n      let head = dots[dots.length - 1];\n\n      switch (this.state.direction) {\n        case 'RIGHT':\n          head = [head[0] + 2, head[1]];\n          dots.shift();\n          dots.push(head);\n          this.setState({\n            snakeDots: dots\n          });\n          break;\n\n        case 'DOWN':\n          head = [head[0], head[1] + 2];\n          dots.shift();\n          dots.push(head);\n          this.setState({\n            snakeDots: dots\n          });\n          break;\n\n        case 'UP':\n          head = [head[0], head[1] - 2];\n          dots.shift();\n          dots.push(head);\n          this.setState({\n            snakeDots: dots\n          });\n          break;\n\n        case 'LEFT':\n          head = [head[0] - 2, head[1]];\n          dots.shift();\n          dots.push(head);\n          this.setState({\n            snakeDots: dots\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.TrapStart = () => {\n      if (this.state.snakeDots.length >= 4) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, React.createElement(Trap, {\n          trap: this.state.trap,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }));\n      }\n    };\n\n    if (this.state.play) setInterval(this.moveSnake, this.state.speed);\n  }\n\n  componentDidMount() {\n    document.onkeydown = this.onKeyDown;\n  }\n\n  componentDidUpdate() {\n    this.checkIfOutOfBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat();\n    this.checkIfTraped();\n  }\n\n  checkIfOutOfBorders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n\n    if (head[0] === 100 || head[1] === 100 || head[0] < 0 || head[1] < 0) {\n      this.onGameOver();\n    }\n  }\n\n  checkIfCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot => {\n      if (head[0] === dot[0] && head[1] === dot[1]) this.onGameOver();\n    });\n  }\n\n  checkIfEat() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n\n    if (head[0] === food[0] && head[1] === food[1]) {\n      var f = getRandomCoordinates();\n      var t = getRandomCoordinates();\n      if (f === t) this.setState({\n        food: f,\n        trap: [f[0] + 1, f[1]]\n      });else this.setState({\n        food: f,\n        trap: t\n      });\n      this.enlargeSnake();\n      this.increaseSpeed();\n    }\n  }\n\n  checkIfTraped() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let trap = this.state.trap;\n    if (head[0] === trap[0] && head[1] === trap[1]) this.onGameOver();\n  }\n\n  enlargeSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([]);\n    this.setState({\n      snakeDots: newSnake\n    });\n  }\n\n  increaseSpeed() {\n    if (this.state.speed > 20) {\n      this.setState({\n        speed: this.state.speed - 20\n      });\n\n      if (this.state.snakeDots.length - 2 === 10) {\n        setInterval(this.moveSnake, this.state.speed);\n        setInterval(this.moveSnake, this.state.speed);\n      }\n    } else {\n      this.setState({\n        speed: this.state.speed - 2\n      });\n    }\n  }\n\n  onGameOver() {\n    window.location.reload(false);\n  }\n\n  ToggleChangeMode() {\n    this.setState({\n      play: true\n    });\n    setInterval(this.moveSnake, this.state.speed);\n  }\n\n  ButtonPlay() {\n    if (!this.state.play) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.ToggleChangeMode.bind(this),\n        variant: \"contained\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \" Play \"));\n    }\n\n    ;\n  }\n\n  render() {\n    const changeBackground1 = {\n      backgroundColor: '#fff'\n    };\n    const changeBackground2 = {\n      backgroundColor: 'gray'\n    };\n    return React.createElement(Container, {\n      className: \"container\",\n      style: this.state.snakeDots.length % 5 === 0 ? changeBackground2 : changeBackground1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Score : \", this.state.snakeDots.length - 2), React.createElement(\"div\", {\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, this.ButtonPlay())), React.createElement(\"div\", {\n      className: \"game-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(Snake, {\n      snakeDots: this.state.snakeDots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(Food, {\n      dot: this.state.food,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), this.TrapStart())), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: props.checkedEasy,\n        onChange: props.handleChange,\n        value: \"checkedEasy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }),\n      label: \"Easy Game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: props.checkedMedium,\n        onChange: props.handleChange,\n        value: \"checkedMedium\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }),\n      label: \"Medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/oss/Desktop/Pet_project/snake/src/App.js"],"names":["React","Component","Grid","Button","Container","FormGroup","FormControlLabel","Switch","Food","Snake","Trap","getRandomCoordinates","min","max","x","Math","floor","random","y","initialState","food","speed","direction","snakeDots","play","trap","easy","medium","App","constructor","state","onKeyDown","e","window","event","keyCode","setState","moveSnake","dots","head","length","shift","push","TrapStart","setInterval","componentDidMount","document","onkeydown","componentDidUpdate","checkIfOutOfBorders","checkIfCollapsed","checkIfEat","checkIfTraped","onGameOver","snake","pop","forEach","dot","f","t","enlargeSnake","increaseSpeed","newSnake","unshift","location","reload","ToggleChangeMode","ButtonPlay","bind","render","changeBackground1","backgroundColor","changeBackground2","props","checkedEasy","handleChange","checkedMedium"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Grid, Button, Container, FormGroup, FormControlLabel, Switch} from '@material-ui/core';\nimport './App.css';\nimport Food from'./Food';\nimport Snake from './Snake';\nimport Trap from './Trap';\n\n\nconst getRandomCoordinates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n  let y =  Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n  return [x,y]\n}\nconst initialState = {\n  food: getRandomCoordinates(),\n  speed: 100,\n  direction: 'RIGHT',\n  snakeDots: [\n    [0,0],\n    [2,0]\n  ],\n  play : false,\n  trap : getRandomCoordinates(),\n  easy : true,\n  medium : false,\n}\n\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    if(this.state.play)\n       setInterval(this.moveSnake,this.state.speed)\n  }\n  state = initialState;\n  componentDidMount() {\n    document.onkeydown = this.onKeyDown;\n  }\n\n  componentDidUpdate() {\n    this.checkIfOutOfBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat();\n    this.checkIfTraped();\n  }\n\n\n  onKeyDown = (e) => {\n    e = e || window.event;\n    if(this.state.direction === 'UP')\n      {\n        switch (e.keyCode) {\n        case 37:\n          this.setState({direction: 'LEFT'});\n          break;\n        case 39:\n          this.setState({direction: 'RIGHT'});\n          break;\n        default:\n          break;\n      }\n    }\n  if(this.state.direction === 'DOWN')\n    {\n      switch (e.keyCode) {\n      case 37:\n        this.setState({direction: 'LEFT'});\n        break;\n      case 39:\n        this.setState({direction: 'RIGHT'});\n        break;\n      default:\n        break;\n    }\n  }\n  if(this.state.direction === 'LEFT')\n    {\n      switch (e.keyCode) {\n      case 38:\n        this.setState({direction: 'UP'});\n        break;\n      case 40:\n        this.setState({direction: 'DOWN'});\n        break;\n      default:\n        break;\n    }\n  }\n  if(this.state.direction === 'RIGHT')\n    {\n      switch (e.keyCode) {\n      case 38:\n        this.setState({direction: 'UP'});\n        break;\n      case 40:\n        this.setState({direction: 'DOWN'});\n        break;\n      default:\n        break;\n    }\n  }\n    }\n  moveSnake = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n      switch (this.state.direction) {\n        case 'RIGHT':\n          head = [head[0] + 2, head[1]];\n          dots.shift();\n          dots.push(head);\n          this.setState({\n            snakeDots: dots\n          })\n          break;\n        case 'DOWN':\n          head = [head[0], head[1] + 2];\n          dots.shift();\n          dots.push(head);\n          this.setState({\n            snakeDots: dots\n          })\n          break;\n        case 'UP':\n          head = [head[0], head[1] - 2];\n          dots.shift();\n          dots.push(head);\n          this.setState({\n            snakeDots: dots\n          })\n          break;\n        case 'LEFT':\n          head = [head[0] - 2, head[1]];\n          dots.shift();\n          dots.push(head);\n          this.setState({\n            snakeDots: dots\n          })\n          break;\n        default:\n          break;\n        }\n\n  }\n  checkIfOutOfBorders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    if (head[0] === 100 || head[1] === 100 || head[0] < 0 || head[1] < 0) {\n      this.onGameOver();\n    }\n  }\n   checkIfCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot=>{\n      if(head[0]===dot[0] && head[1]===dot[1])\n        this.onGameOver();\n    })\n  }\n  checkIfEat() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n    if (head[0] === food[0] && head[1] === food[1]) {\n      var f = getRandomCoordinates();\n      var t = getRandomCoordinates();\n      if(f === t)\n      this.setState({\n        food: f,\n        trap: [f[0]+1,f[1]]\n      })\n      else\n      this.setState({\n        food: f,\n        trap: t\n      })\n      this.enlargeSnake();\n      this.increaseSpeed();\n    }\n  }\n  checkIfTraped() {\n    let head = this.state.snakeDots[this.state.snakeDots.length-1];\n    let trap = this.state.trap;\n    if(head[0]===trap[0] && head[1]===trap[1])\n        this.onGameOver();\n  }\n  enlargeSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([])\n    this.setState({\n      snakeDots: newSnake\n    })\n  }\n  increaseSpeed() {\n    if (this.state.speed > 20) {\n      this.setState({\n        speed: this.state.speed - 20\n      })\n    if(this.state.snakeDots.length -2 === 10)\n      {\n      setInterval(this.moveSnake, this.state.speed);\n      setInterval(this.moveSnake, this.state.speed);\n      }\n    }\n    else{\n      this.setState({\n        speed: this.state.speed - 2\n      })\n    }\n  }\n\n  onGameOver() {\n    window.location.reload(false);\n    }\n\n  ToggleChangeMode(){\n    this.setState({play : true});\n    setInterval(this.moveSnake, this.state.speed)\n  }\n\n   ButtonPlay() {\n    if(!this.state.play){\n    return(\n      <div>\n        <Button onClick={this.ToggleChangeMode.bind(this)}  variant=\"contained\" > Play </Button>\n      </div>\n    );\n  };\n  }\n  TrapStart = () =>{\n    if(this.state.snakeDots.length >= 4)\n    {\n      return (\n        <div>\n          <Trap trap={this.state.trap} />\n        </div>\n      );\n    }\n  };\n  render(){\n    const changeBackground1={\n      backgroundColor:'#fff',\n    };\n    const changeBackground2={\n      backgroundColor:'gray',\n    };\n\n    return (\n      <Container className='container' style={((this.state.snakeDots.length)%5===0)?changeBackground2:changeBackground1}>\n        <Grid container>\n          <div className='score'>\n            <Button variant=\"contained\" disabled >\n              Score : {this.state.snakeDots.length -2 }\n            </Button>\n            <div className='button'>\n              {this.ButtonPlay()}\n            </div>\n          </div>\n\n          <div className=\"game-area\">\n            <Snake snakeDots={this.state.snakeDots}/>\n            <Food dot={this.state.food}/>\n            {this.TrapStart()}\n          </div>\n        </Grid>\n        <FormGroup row>\n          <FormControlLabel\n            control={\n              <Switch checked={props.checkedEasy}\n              onChange={props.handleChange}\n              value=\"checkedEasy\"\n              />\n            }\n            label=\"Easy Game\"\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={props.checkedMedium}\n                onChange={props.handleChange}\n                value=\"checkedMedium\"\n                color=\"primary\"\n              />\n            }\n            label=\"Medium\"\n          />\n        </FormGroup>\n      </Container>\n\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}