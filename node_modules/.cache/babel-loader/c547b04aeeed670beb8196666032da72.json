{"ast":null,"code":"var _jsxFileName = \"/Users/oss/Desktop/Pet_project/snake/src/App.js\";\nimport React, { Component } from 'react';\nimport { Grid, Button, Typography, Container, Modal, Backdrop, Fade } from '@material-ui/core';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport './App.css';\nimport Food from './Food';\nimport Snake from './Snake';\nimport Trap from './Trap';\n\nconst getRandomCoordinates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  return [x, y];\n};\n\nconst initialState = {\n  food: getRandomCoordinates(),\n  speed: 100,\n  direction: 'RIGHT',\n  snakeDots: [[0, 0], [2, 0]],\n  play: false,\n  trap: getRandomCoordinates()\n};\nconst useStyles = makeStyles(theme => createStyles({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n\n    this.onKeyDown = e => {\n      e = e || window.event;\n\n      if (this.state.direction === 'UP') {\n        switch (e.keyCode) {\n          case 37:\n            this.setState({\n              direction: 'LEFT'\n            });\n            break;\n\n          case 39:\n            this.setState({\n              direction: 'RIGHT'\n            });\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      if (this.state.direction === 'DOWN') {\n        switch (e.keyCode) {\n          case 37:\n            this.setState({\n              direction: 'LEFT'\n            });\n            break;\n\n          case 39:\n            this.setState({\n              direction: 'RIGHT'\n            });\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      if (this.state.direction === 'LEFT') {\n        switch (e.keyCode) {\n          case 38:\n            this.setState({\n              direction: 'UP'\n            });\n            break;\n\n          case 40:\n            this.setState({\n              direction: 'DOWN'\n            });\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      if (this.state.direction === 'RIGHT') {\n        switch (e.keyCode) {\n          case 38:\n            this.setState({\n              direction: 'UP'\n            });\n            break;\n\n          case 40:\n            this.setState({\n              direction: 'DOWN'\n            });\n            break;\n\n          default:\n            break;\n        }\n      }\n    };\n\n    this.moveSnake = () => {\n      let dots = [...this.state.snakeDots];\n      let head = dots[dots.length - 1];\n\n      switch (this.state.direction) {\n        case 'RIGHT':\n          head = [head[0] + 2, head[1]];\n          dots.push(head);\n          dots.shift();\n          this.setState({\n            snakeDots: dots\n          });\n          break;\n\n        case 'DOWN':\n          head = [head[0], head[1] + 2];\n          dots.push(head);\n          dots.shift();\n          this.setState({\n            snakeDots: dots\n          });\n          break;\n\n        case 'UP':\n          head = [head[0], head[1] - 2];\n          dots.push(head);\n          dots.shift();\n          this.setState({\n            snakeDots: dots\n          });\n          break;\n\n        case 'LEFT':\n          head = [head[0] - 2, head[1]];\n          dots.push(head);\n          dots.shift();\n          this.setState({\n            snakeDots: dots\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.ButtonPlay = () => {\n      if (!this.state.play) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: this.ToggleChangeMode.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, \" Play \"));\n      }\n\n      ;\n    };\n\n    this.TrapStart = () => {\n      if (this.state.snakeDots.length >= 4) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, React.createElement(Trap, {\n          trap: this.state.trap,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }));\n      }\n    };\n\n    if (this.state.play) setInterval(this.moveSnake, this.state.speed);\n  }\n\n  componentDidMount() {\n    document.onkeydown = this.onKeyDown;\n  }\n\n  componentDidUpdate() {\n    this.checkIfOutOfBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat();\n    this.checkIfTraped();\n  }\n\n  checkIfOutOfBorders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n\n    if (head[0] === 100 || head[1] === 100 || head[0] < 0 || head[1] < 0) {\n      this.onGameOver();\n    }\n  }\n\n  checkIfCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.map(dot => {\n      if (head[0] === dot[0] && head[1] === dot[1]) this.onGameOver();\n    });\n  }\n\n  checkIfEat() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n\n    if (head[0] === food[0] && head[1] === food[1]) {\n      var f = getRandomCoordinates();\n      var t = getRandomCoordinates();\n      if (f === t) this.setState({\n        food: f,\n        trap: [f[0] + 1, f[1]]\n      });else this.setState({\n        food: f,\n        trap: t\n      });\n      this.enlargeSnake();\n      this.increaseSpeed();\n    }\n  }\n\n  checkIfTraped() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let trap = this.state.trap;\n    if (head[0] === trap[0] && head[1] === trap[1]) this.onGameOver();\n  }\n\n  enlargeSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([]);\n    this.setState({\n      snakeDots: newSnake\n    });\n  }\n\n  increaseSpeed() {\n    if (this.state.speed > 20) {\n      this.setState({\n        speed: this.state.speed - 20\n      });\n\n      if (this.state.snakeDots.length - 2 === 10) {\n        setInterval(this.moveSnake, this.state.speed);\n        setInterval(this.moveSnake, this.state.speed);\n      }\n    } else {\n      this.setState({\n        speed: this.state.speed - 2\n      });\n    }\n  }\n\n  onGameOver() {\n    this.TransitionsModal();\n  }\n\n  ToggleChangeMode() {\n    this.setState({\n      play: true\n    });\n    var move = setInterval(this.moveSnake, this.state.speed);\n  }\n\n  TransitionsModal() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n      setOpen(true);\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: handleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"react-transition-group\"), React.createElement(Modal, {\n      \"aria-labelledby\": \"transition-modal-title\",\n      \"aria-describedby\": \"transition-modal-description\",\n      className: classes.modal,\n      open: open,\n      onClose: handleClose,\n      closeAfterTransition: true,\n      BackdropComponent: Backdrop,\n      BackdropProps: {\n        timeout: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(Fade, {\n      in: open,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      id: \"transition-modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"Transition modal\"), React.createElement(\"p\", {\n      id: \"transition-modal-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"react-transition-group animates me.\")))));\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h5\",\n      className: \"fontScore\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Score : \", this.state.snakeDots.length - 2)), React.createElement(\"div\", {\n      className: \"game-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(Snake, {\n      snakeDots: this.state.snakeDots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), React.createElement(Food, {\n      dot: this.state.food,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), this.TrapStart())), this.ButtonPlay(), React.createElement(Popup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/oss/Desktop/Pet_project/snake/src/App.js"],"names":["React","Component","Grid","Button","Typography","Container","Modal","Backdrop","Fade","makeStyles","Theme","createStyles","Food","Snake","Trap","getRandomCoordinates","min","max","x","Math","floor","random","y","initialState","food","speed","direction","snakeDots","play","trap","useStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","constructor","state","onKeyDown","e","window","event","keyCode","setState","moveSnake","dots","head","length","push","shift","ButtonPlay","ToggleChangeMode","bind","TrapStart","setInterval","componentDidMount","document","onkeydown","componentDidUpdate","checkIfOutOfBorders","checkIfCollapsed","checkIfEat","checkIfTraped","onGameOver","snake","pop","map","dot","f","t","enlargeSnake","increaseSpeed","newSnake","unshift","TransitionsModal","move","classes","open","setOpen","useState","handleOpen","handleClose","timeout","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Grid, Button, Typography, Container, Modal, Backdrop, Fade} from '@material-ui/core';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport './App.css';\nimport Food from'./Food';\nimport Snake from './Snake';\nimport Trap from './Trap';\n\nconst getRandomCoordinates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n  let y =  Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n  return [x,y]\n}\nconst initialState = {\n  food: getRandomCoordinates(),\n  speed: 100,\n  direction: 'RIGHT',\n  snakeDots: [\n    [0,0],\n    [2,0]\n  ],\n  play : false,\n  trap : getRandomCoordinates(),\n}\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }),\n);\n\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    if(this.state.play)\n       setInterval(this.moveSnake,this.state.speed)\n  }\n  state = initialState;\n  componentDidMount() {\n    document.onkeydown = this.onKeyDown;\n  }\n\n  componentDidUpdate() {\n    this.checkIfOutOfBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat();\n    this.checkIfTraped();\n  }\n\n\n  onKeyDown = (e) => {\n    e = e || window.event;\n    if(this.state.direction === 'UP')\n      {\n        switch (e.keyCode) {\n        case 37:\n          this.setState({direction: 'LEFT'});\n          break;\n        case 39:\n          this.setState({direction: 'RIGHT'});\n          break;\n        default:\n          break;\n      }\n    }\n  if(this.state.direction === 'DOWN')\n    {\n      switch (e.keyCode) {\n      case 37:\n        this.setState({direction: 'LEFT'});\n        break;\n      case 39:\n        this.setState({direction: 'RIGHT'});\n        break;\n      default:\n        break;\n    }\n  }\n  if(this.state.direction === 'LEFT')\n    {\n      switch (e.keyCode) {\n      case 38:\n        this.setState({direction: 'UP'});\n        break;\n      case 40:\n        this.setState({direction: 'DOWN'});\n        break;\n      default:\n        break;\n    }\n  }\n  if(this.state.direction === 'RIGHT')\n    {\n      switch (e.keyCode) {\n      case 38:\n        this.setState({direction: 'UP'});\n        break;\n      case 40:\n        this.setState({direction: 'DOWN'});\n        break;\n      default:\n        break;\n    }\n  }\n    }\n  moveSnake = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n      switch (this.state.direction) {\n        case 'RIGHT':\n          head = [head[0] + 2, head[1]];\n          dots.push(head);\n          dots.shift();\n          this.setState({\n            snakeDots: dots\n          })\n          break;\n        case 'DOWN':\n          head = [head[0], head[1] + 2];\n          dots.push(head);\n          dots.shift();\n          this.setState({\n            snakeDots: dots\n          })\n          break;\n        case 'UP':\n          head = [head[0], head[1] - 2];\n          dots.push(head);\n          dots.shift();\n          this.setState({\n            snakeDots: dots\n          })\n          break;\n        case 'LEFT':\n          head = [head[0] - 2, head[1]];\n          dots.push(head);\n          dots.shift();\n          this.setState({\n            snakeDots: dots\n          })\n          break;\n        default:\n          break;\n        }\n\n  }\n  checkIfOutOfBorders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    if (head[0] === 100 || head[1] === 100 || head[0] < 0 || head[1] < 0) {\n      this.onGameOver();\n    }\n  }\n   checkIfCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.map(dot  =>{\n      if(head[0]===dot[0] && head[1]===dot[1])\n        this.onGameOver();\n    })\n  }\n  checkIfEat() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n    if (head[0] === food[0] && head[1] === food[1]) {\n      var f = getRandomCoordinates();\n      var t = getRandomCoordinates();\n      if(f === t)\n      this.setState({\n        food: f,\n        trap: [f[0]+1,f[1]]\n      })\n      else\n      this.setState({\n        food: f,\n        trap: t\n      })\n      this.enlargeSnake();\n      this.increaseSpeed();\n    }\n  }\n  checkIfTraped() {\n    let head = this.state.snakeDots[this.state.snakeDots.length-1];\n    let trap = this.state.trap;\n    if(head[0]===trap[0] && head[1]===trap[1])\n        this.onGameOver();\n  }\n  enlargeSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([])\n    this.setState({\n      snakeDots: newSnake\n    })\n  }\n  increaseSpeed() {\n    if (this.state.speed > 20) {\n      this.setState({\n        speed: this.state.speed - 20\n      })\n    if(this.state.snakeDots.length -2 === 10)\n      {\n      setInterval(this.moveSnake, this.state.speed);\n      setInterval(this.moveSnake, this.state.speed);\n      }\n    }\n    else{\n      this.setState({\n        speed: this.state.speed - 2\n      })\n    }\n  }\n  onGameOver() {\n    this.TransitionsModal()\n    }\n  ToggleChangeMode(){\n    this.setState({play : true});\n    var move = setInterval(this.moveSnake, this.state.speed)\n  }\n   ButtonPlay = () => {\n    if(!this.state.play){\n    return(\n      <div>\n        <Button onClick={this.ToggleChangeMode.bind(this)} > Play </Button>\n      </div>\n    );\n  };\n  }\n  TrapStart = () =>{\n    if(this.state.snakeDots.length >= 4)\n    {\n      return (\n        <div>\n          <Trap trap={this.state.trap} />\n        </div>\n      );\n    }\n  };\n  TransitionsModal() {\n   const classes = useStyles();\n   const [open, setOpen] = React.useState(false);\n\n   const handleOpen = () => {\n     setOpen(true);\n   };\n\n   const handleClose = () => {\n     setOpen(false);\n   };\n\n   return (\n     <div>\n       <button type=\"button\" onClick={handleOpen}>\n         react-transition-group\n       </button>\n       <Modal\n         aria-labelledby=\"transition-modal-title\"\n         aria-describedby=\"transition-modal-description\"\n         className={classes.modal}\n         open={open}\n         onClose={handleClose}\n         closeAfterTransition\n         BackdropComponent={Backdrop}\n         BackdropProps={{\n           timeout: 500,\n         }}\n       >\n         <Fade in={open}>\n           <div className={classes.paper}>\n             <h2 id=\"transition-modal-title\">Transition modal</h2>\n             <p id=\"transition-modal-description\">react-transition-group animates me.</p>\n           </div>\n         </Fade>\n       </Modal>\n     </div>\n   );\n }\n  render(){\n    return (\n      <Container>\n        <Grid container  spacing={2} >\n          <div className='score'>\n            <Typography variant=\"h5\" component=\"h5\" className='fontScore' >\n              Score : {this.state.snakeDots.length -2 }\n            </Typography>\n          </div>\n          <div className=\"game-area\">\n            <Snake snakeDots={this.state.snakeDots}/>\n            <Food dot={this.state.food}/>\n            {this.TrapStart()}\n          </div>\n        </Grid>\n        {this.ButtonPlay()}\n        <Popup />\n\n      </Container>\n\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}