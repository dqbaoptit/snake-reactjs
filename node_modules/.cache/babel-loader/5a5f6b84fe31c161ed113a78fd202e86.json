{"ast":null,"code":"var _jsxFileName = \"/Users/tiendat/Desktop/backup/Git/snake-reactjs/src/App.js\";\nimport React, { Component } from 'react';\nimport { Grid, Button, Container, FormGroup, FormControlLabel, Switch } from '@material-ui/core';\nimport './App.css';\nimport Food from './Food';\nimport Snake from './Snake';\nimport Trap from './Trap';\nimport Piano from './media/piano.mp3';\n\nconst getRandomCoordinates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  return [x, y];\n};\n\nconst initialState = {\n  food: getRandomCoordinates(),\n  speed: 100,\n  direction: 'RIGHT',\n  snakeDots: [[0, 0], [2, 0]],\n  play: false,\n  trap: getRandomCoordinates(),\n  easy: true,\n  medium: true\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.onKeyDown = e => {\n      e = e || window.event;\n\n      if (this.state.direction === 'UP') {\n        switch (e.keyCode) {\n          case 37:\n            this.setState({\n              direction: 'LEFT'\n            });\n            break;\n\n          case 39:\n            this.setState({\n              direction: 'RIGHT'\n            });\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      if (this.state.direction === 'DOWN') {\n        switch (e.keyCode) {\n          case 37:\n            this.setState({\n              direction: 'LEFT'\n            });\n            break;\n\n          case 39:\n            this.setState({\n              direction: 'RIGHT'\n            });\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      if (this.state.direction === 'LEFT') {\n        switch (e.keyCode) {\n          case 38:\n            this.setState({\n              direction: 'UP'\n            });\n            break;\n\n          case 40:\n            this.setState({\n              direction: 'DOWN'\n            });\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      if (this.state.direction === 'RIGHT') {\n        switch (e.keyCode) {\n          case 38:\n            this.setState({\n              direction: 'UP'\n            });\n            break;\n\n          case 40:\n            this.setState({\n              direction: 'DOWN'\n            });\n            break;\n\n          default:\n            break;\n        }\n      }\n    };\n\n    this.moveSnake = () => {\n      let dots = [...this.state.snakeDots];\n      let head = dots[dots.length - 1];\n\n      switch (this.state.direction) {\n        case 'RIGHT':\n          head = [head[0] + 2, head[1]];\n          dots.shift();\n          dots.push(head);\n          this.setState({\n            snakeDots: dots\n          });\n          break;\n\n        case 'DOWN':\n          head = [head[0], head[1] + 2];\n          dots.shift();\n          dots.push(head);\n          this.setState({\n            snakeDots: dots\n          });\n          break;\n\n        case 'UP':\n          head = [head[0], head[1] - 2];\n          dots.shift();\n          dots.push(head);\n          this.setState({\n            snakeDots: dots\n          });\n          break;\n\n        case 'LEFT':\n          head = [head[0] - 2, head[1]];\n          dots.shift();\n          dots.push(head);\n          this.setState({\n            snakeDots: dots\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.TrapStart = () => {\n      if (this.state.snakeDots.length >= 4) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, React.createElement(Trap, {\n          trap: this.state.trap,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.changeModeEz = () => {\n      this.setState({\n        easy: !this.state.easy,\n        speed: 100\n      });\n    };\n\n    this.changeModeMedium = () => {\n      this.setState({\n        medium: !this.state.medium,\n        speed: 50\n      });\n    };\n\n    this.GotoGame = () => {\n      if (!this.state.play) {\n        return this.state.easy && this.state.medium ? this.ShowPreSwitch() : this.state.easy && !this.state.medium ? this.ShowSwitchMedium() : this.ShowSwitchEz();\n      } else {\n        return this.ShowSwitchPlay();\n      }\n    };\n\n    this.ShowPreSwitch = () => {\n      return React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.checkedEasy,\n          value: \"checkedEasy\",\n          onChange: this.changeModeEz,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }),\n        label: \"Easy Game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.checkedMedium,\n          value: \"checkedMedium\",\n          onChange: this.changeModeMedium,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }),\n        label: \"Medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }));\n    };\n\n    this.ShowSwitchEz = () => {\n      return React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.checkedEasy,\n          value: \"checkedEasy\",\n          onChange: this.changeModeEz,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }),\n        label: \"Easy Game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        disabled: true,\n        control: React.createElement(Switch, {\n          value: \"Medium\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }),\n        label: \"Medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }));\n    };\n\n    this.ShowSwitchMedium = () => {\n      return React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        disabled: true,\n        control: React.createElement(Switch, {\n          value: \"Easy\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }),\n        label: \"Easy Game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.checkedMedium,\n          value: \"checkedMedium\",\n          onChange: this.changeModeMedium,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          },\n          __self: this\n        }),\n        label: \"Medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }));\n    };\n\n    this.ShowSwitchPlay = () => {\n      return React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        disabled: true,\n        control: React.createElement(Switch, {\n          value: \"Easy\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        }),\n        label: \"Easy Game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        disabled: true,\n        control: React.createElement(Switch, {\n          value: \"Medium\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339\n          },\n          __self: this\n        }),\n        label: \"Medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }));\n    };\n\n    this.MusicPlayNormal = () => {\n      if (this.state.play) return React.createElement(\"audio\", {\n        autoPlay: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        src: Piano,\n        type: \"audio/mp3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }));\n    };\n  }\n\n  componentDidMount() {\n    document.onkeydown = this.onKeyDown;\n  }\n\n  componentDidUpdate() {\n    this.checkIfOutOfBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat();\n    this.checkIfTraped();\n  }\n\n  checkIfOutOfBorders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n\n    if (head[0] === 100 || head[1] === 100 || head[0] < 0 || head[1] < 0) {\n      this.onGameOver();\n    }\n  }\n\n  checkIfCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot => {\n      if (head[0] === dot[0] && head[1] === dot[1]) this.onGameOver();\n    });\n  }\n\n  checkIfEat() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n\n    if (head[0] === food[0] && head[1] === food[1]) {\n      var f = getRandomCoordinates();\n      var t = getRandomCoordinates();\n      if (f === t) this.setState({\n        food: f,\n        trap: [f[0] + 1, f[1]]\n      });else this.setState({\n        food: f,\n        trap: t\n      });\n      this.enlargeSnake();\n      this.increaseSpeed();\n    }\n  }\n\n  checkIfTraped() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let trap = this.state.trap;\n    if (head[0] === trap[0] && head[1] === trap[1]) this.onGameOver();\n  }\n\n  enlargeSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([]);\n    this.setState({\n      snakeDots: newSnake\n    });\n  }\n\n  increaseSpeed() {\n    if (this.state.speed > 20) {\n      this.setState({\n        speed: this.state.speed - 20\n      });\n    } else {\n      this.setState({\n        speed: this.state.speed - 2\n      });\n    }\n  }\n\n  onGameOver() {\n    if (localStorage.getItem('highscore') === null) {\n      localStorage.setItem('highscore', this.state.snakeDots.length - 2);\n    } else {\n      if (localStorage.getItem('highscore') < this.state.snakeDots.length - 2) localStorage.setItem('highscore', this.state.snakeDots.length - 2);\n    }\n\n    window.location.reload(false);\n  }\n\n  ToggleChangeMode() {\n    this.setState({\n      play: true\n    });\n    setInterval(this.moveSnake, this.state.speed);\n  }\n\n  ButtonPlay() {\n    if (!this.state.play && this.state.easy && this.state.medium) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.ToggleChangeMode.bind(this),\n        variant: \"contained\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \" Play \"));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.ToggleChangeMode.bind(this),\n        variant: \"contained\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \" Play \"));\n    }\n  }\n\n  render() {\n    const changeBackground1 = {\n      backgroundColor: '#fff',\n      border: '3px solid black'\n    };\n    const changeBackground2 = {\n      backgroundColor: 'gray',\n      border: '3px solid black'\n    };\n    return React.createElement(Container, {\n      className: \"container\",\n      style: this.state.snakeDots.length % 5 === 0 ? changeBackground2 : changeBackground1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"Max score : \", localStorage.getItem('highscore'))), React.createElement(\"div\", {\n      className: \"score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, \"Score : \", this.state.snakeDots.length - 2), React.createElement(\"div\", {\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, !this.state.play && this.ButtonPlay())), React.createElement(\"div\", {\n      className: \"game-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(Snake, {\n      snakeDots: this.state.snakeDots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }), React.createElement(Food, {\n      dot: this.state.food,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }), this.TrapStart()), React.createElement(\"div\", {\n      className: \"switch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, this.GotoGame())), this.MusicPlayNormal());\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tiendat/Desktop/backup/Git/snake-reactjs/src/App.js"],"names":["React","Component","Grid","Button","Container","FormGroup","FormControlLabel","Switch","Food","Snake","Trap","Piano","getRandomCoordinates","min","max","x","Math","floor","random","y","initialState","food","speed","direction","snakeDots","play","trap","easy","medium","App","state","onKeyDown","e","window","event","keyCode","setState","moveSnake","dots","head","length","shift","push","TrapStart","changeModeEz","changeModeMedium","GotoGame","ShowPreSwitch","ShowSwitchMedium","ShowSwitchEz","ShowSwitchPlay","checkedEasy","checkedMedium","MusicPlayNormal","componentDidMount","document","onkeydown","componentDidUpdate","checkIfOutOfBorders","checkIfCollapsed","checkIfEat","checkIfTraped","onGameOver","snake","pop","forEach","dot","f","t","enlargeSnake","increaseSpeed","newSnake","unshift","localStorage","getItem","setItem","location","reload","ToggleChangeMode","setInterval","ButtonPlay","bind","render","changeBackground1","backgroundColor","border","changeBackground2"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, Button, Container, FormGroup, FormControlLabel, Switch } from '@material-ui/core';\nimport './App.css';\nimport Food from './Food';\nimport Snake from './Snake';\nimport Trap from './Trap';\nimport Piano from './media/piano.mp3';\n\nconst getRandomCoordinates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  return [x, y]\n}\nconst initialState = {\n  food: getRandomCoordinates(),\n  speed: 100,\n  direction: 'RIGHT',\n  snakeDots: [\n    [0, 0],\n    [2, 0]\n  ],\n  play: false,\n  trap: getRandomCoordinates(),\n  easy: true,\n  medium: true,\n}\n\nclass App extends Component {\n  state = initialState;\n  componentDidMount() {\n    document.onkeydown = this.onKeyDown;\n  }\n\n  componentDidUpdate() {\n    this.checkIfOutOfBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat();\n    this.checkIfTraped();\n  }\n\n\n  onKeyDown = (e) => {\n    e = e || window.event;\n    if (this.state.direction === 'UP') {\n      switch (e.keyCode) {\n        case 37:\n          this.setState({ direction: 'LEFT' });\n          break;\n        case 39:\n          this.setState({ direction: 'RIGHT' });\n          break;\n        default:\n          break;\n      }\n    }\n    if (this.state.direction === 'DOWN') {\n      switch (e.keyCode) {\n        case 37:\n          this.setState({ direction: 'LEFT' });\n          break;\n        case 39:\n          this.setState({ direction: 'RIGHT' });\n          break;\n        default:\n          break;\n      }\n    }\n    if (this.state.direction === 'LEFT') {\n      switch (e.keyCode) {\n        case 38:\n          this.setState({ direction: 'UP' });\n          break;\n        case 40:\n          this.setState({ direction: 'DOWN' });\n          break;\n        default:\n          break;\n      }\n    }\n    if (this.state.direction === 'RIGHT') {\n      switch (e.keyCode) {\n        case 38:\n          this.setState({ direction: 'UP' });\n          break;\n        case 40:\n          this.setState({ direction: 'DOWN' });\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  moveSnake = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n    switch (this.state.direction) {\n      case 'RIGHT':\n        head = [head[0] + 2, head[1]];\n        dots.shift();\n        dots.push(head);\n        this.setState({\n          snakeDots: dots\n        })\n        break;\n      case 'DOWN':\n        head = [head[0], head[1] + 2];\n        dots.shift();\n        dots.push(head);\n        this.setState({\n          snakeDots: dots\n        })\n        break;\n      case 'UP':\n        head = [head[0], head[1] - 2];\n        dots.shift();\n        dots.push(head);\n        this.setState({\n          snakeDots: dots\n        })\n        break;\n      case 'LEFT':\n        head = [head[0] - 2, head[1]];\n        dots.shift();\n        dots.push(head);\n        this.setState({\n          snakeDots: dots\n        })\n        break;\n      default:\n        break;\n    }\n\n  }\n  checkIfOutOfBorders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    if (head[0] === 100 || head[1] === 100 || head[0] < 0 || head[1] < 0) {\n      this.onGameOver();\n    }\n  }\n  checkIfCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot => {\n      if (head[0] === dot[0] && head[1] === dot[1])\n        this.onGameOver();\n    })\n  }\n  checkIfEat() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n    if (head[0] === food[0] && head[1] === food[1]) {\n      var f = getRandomCoordinates();\n      var t = getRandomCoordinates();\n      if (f === t)\n        this.setState({\n          food: f,\n          trap: [f[0] + 1, f[1]]\n        })\n      else\n        this.setState({\n          food: f,\n          trap: t\n        })\n      this.enlargeSnake();\n      this.increaseSpeed();\n    }\n  }\n  checkIfTraped() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let trap = this.state.trap;\n    if (head[0] === trap[0] && head[1] === trap[1])\n      this.onGameOver();\n  }\n  enlargeSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([])\n    this.setState({\n      snakeDots: newSnake\n    })\n  }\n  increaseSpeed() {\n    if (this.state.speed > 20) {\n      this.setState({\n        speed: this.state.speed - 20\n      })\n    }\n    else {\n      this.setState({\n        speed: this.state.speed - 2\n      })\n    }\n  }\n\n\n  onGameOver() {\n    if (localStorage.getItem('highscore') === null) {\n      localStorage.setItem('highscore', this.state.snakeDots.length - 2)\n    }\n    else {\n      if (localStorage.getItem('highscore') < this.state.snakeDots.length - 2)\n        localStorage.setItem('highscore', this.state.snakeDots.length - 2)\n    }\n    window.location.reload(false);\n  }\n\n  ToggleChangeMode() {\n    this.setState({ play: true })\n    setInterval(this.moveSnake, this.state.speed)\n  }\n\n  ButtonPlay() {\n    if (!this.state.play && this.state.easy && this.state.medium) {\n      return (\n        <div>\n          <Button onClick={this.ToggleChangeMode.bind(this)} variant=\"contained\" disabled > Play </Button>\n        </div>\n      )\n    }\n    else {\n      return (\n        <div>\n          <Button onClick={this.ToggleChangeMode.bind(this)} variant=\"contained\"  > Play </Button>\n        </div>\n      );\n    }\n\n  }\n  TrapStart = () => {\n    if (this.state.snakeDots.length >= 4) {\n      return (\n        <div>\n          <Trap trap={this.state.trap} />\n        </div>\n      );\n    }\n  };\n\n  changeModeEz = () => {\n    this.setState({\n      easy: !this.state.easy,\n      speed: 100,\n    })\n  };\n\n  changeModeMedium = () => {\n    this.setState({\n      medium: !this.state.medium,\n      speed: 50,\n    })\n  }\n\n  GotoGame = () => {\n    if (!this.state.play) {\n      return (\n        (this.state.easy && this.state.medium) ? this.ShowPreSwitch() : (this.state.easy && !this.state.medium) ? this.ShowSwitchMedium() : this.ShowSwitchEz()\n      )\n    }\n    else {\n      return (\n        this.ShowSwitchPlay()\n      )\n    }\n  }\n\n\n\n\n  ShowPreSwitch = () => {\n    return (\n      <FormGroup row>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={this.state.checkedEasy}\n              value=\"checkedEasy\"\n              onChange={this.changeModeEz}\n            />\n          }\n          label=\"Easy Game\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={this.state.checkedMedium}\n              value=\"checkedMedium\"\n              onChange={this.changeModeMedium}\n              color=\"primary\"\n            />\n          }\n          label=\"Medium\"\n        />\n      </FormGroup>\n    )\n  }\n\n  ShowSwitchEz = () => {\n    return (\n      <FormGroup row>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={this.state.checkedEasy}\n              value=\"checkedEasy\"\n              onChange={this.changeModeEz}\n            />\n          }\n          label=\"Easy Game\"\n        />\n        <FormControlLabel disabled control={<Switch value=\"Medium\" />} label=\"Medium\" />\n      </FormGroup>\n    )\n  }\n\n  ShowSwitchMedium = () => {\n    return (\n      <FormGroup row>\n        <FormControlLabel disabled control={<Switch value=\"Easy\" />} label=\"Easy Game\" />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={this.state.checkedMedium}\n              value=\"checkedMedium\"\n              onChange={this.changeModeMedium}\n              color=\"primary\"\n            />\n          }\n          label=\"Medium\"\n        />\n      </FormGroup>\n    )\n  }\n  ShowSwitchPlay = () => {\n    return (\n      <FormGroup row>\n        <FormControlLabel disabled control={<Switch value=\"Easy\" />} label=\"Easy Game\" />\n        <FormControlLabel disabled control={<Switch value=\"Medium\" />} label=\"Medium\" />\n      </FormGroup>\n    )\n  }\n  MusicPlayNormal = () => {\n    if (this.state.play)\n      return (\n        <audio autoPlay>\n          <source src={Piano} type=\"audio/mp3\" />\n        </audio>\n      )\n  }\n\n\n  render() {\n    const changeBackground1 = {\n      backgroundColor: '#fff',\n      border: '3px solid black',\n\n    };\n    const changeBackground2 = {\n      backgroundColor: 'gray',\n      border: '3px solid black',\n\n    };\n    return (\n      <Container className='container' style={((this.state.snakeDots.length) % 5 === 0) ? changeBackground2 : changeBackground1}>\n        <Grid container>\n          <div className='score'>\n            <Button variant=\"contained\" disabled >\n              Max score : {localStorage.getItem('highscore')}\n            </Button>\n          </div>\n          <div className='score'>\n\n            <Button variant=\"contained\" disabled >\n              Score : {this.state.snakeDots.length - 2}\n            </Button>\n\n            <div className='button'>\n              {(!this.state.play) && this.ButtonPlay()}\n            </div>\n          </div>\n          <div className=\"game-area\">\n            <Snake snakeDots={this.state.snakeDots} />\n            <Food dot={this.state.food} />\n            {this.TrapStart()}\n          </div>\n          <div className=\"switch\">\n            {this.GotoGame()}\n          </div>\n        </Grid>\n        {this.MusicPlayNormal()}\n      </Container>\n\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}