{"version":3,"sources":["media/piano.mp3","Food.js","Snake.js","Trap.js","App.js","index.js"],"names":["module","exports","props","style","left","dot","top","className","snakeDots","map","i","key","trap","getRandomCoordinates","Math","floor","random","initialState","food","speed","direction","play","easy","medium","App","state","onKeyDown","e","window","event","keyCode","setState","moveSnake","dots","head","length","shift","push","TrapStart","Trap","changeModeEz","changeModeMedium","GotoGame","ShowSwitchPlay","ShowPreSwitch","ShowSwitchMedium","ShowSwitchEz","FormGroup","row","FormControlLabel","control","Switch","checked","checkedEasy","value","onChange","label","checkedMedium","color","disabled","MusicPlayNormal","autoPlay","src","Piano","type","document","onkeydown","this","checkIfOutOfBorders","checkIfCollapsed","checkIfEat","checkIfTraped","onGameOver","snake","pop","forEach","f","t","enlargeSnake","increaseSpeed","newSnake","unshift","localStorage","getItem","setItem","location","reload","setInterval","Button","onClick","ToggleChangeMode","bind","variant","Container","backgroundColor","border","Grid","container","ButtonPlay","Snake","Food","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b0bbef72.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/piano.bcf8c0fa.mp3\";","import React from 'react';\n\nexport default (props) => {\n\n  const style = {\n    left: `${props.dot[0]}%`,\n    top: `${props.dot[1]}%`\n  }\n\n  return (\n    <div className=\"food\" style={style}></div>\n  )\n}\n","import React from 'react';\n\nexport default (props) => {\n  return (\n    <div>\n      {props.snakeDots.map((dot, i) => {\n        const style = {\n          left: `${dot[0]}%`,\n          top: `${dot[1]}%`\n        }\n        return (\n          <span className=\"snake\" key={i} style={style}></span>\n        )\n      })}\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default (props) => {\n\n  const style = {\n    left: `${props.trap[0]}%`,\n    top: `${props.trap[1]}%`\n  }\n\n  return (\n    <div className=\"trap\" style={style}></div>\n  )\n}\n","import React, { Component } from 'react';\nimport { Grid, Button, Container, FormGroup, FormControlLabel, Switch } from '@material-ui/core';\nimport './App.css';\nimport Food from './Food';\nimport Snake from './Snake';\nimport Trap from './Trap';\nimport Piano from './media/piano.mp3';\n\nconst getRandomCoordinates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  return [x, y]\n}\nconst initialState = {\n  food: getRandomCoordinates(),\n  speed: 100,\n  direction: 'RIGHT',\n  snakeDots: [\n    [0, 0],\n    [2, 0]\n  ],\n  play: false,\n  trap: getRandomCoordinates(),\n  easy: true,\n  medium: true,\n}\n\nclass App extends Component {\n  state = initialState;\n  componentDidMount() {\n    document.onkeydown = this.onKeyDown;\n  }\n\n  componentDidUpdate() {\n    this.checkIfOutOfBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat();\n    this.checkIfTraped();\n  }\n\n\n  onKeyDown = (e) => {\n    e = e || window.event;\n    if (this.state.direction === 'UP') {\n      switch (e.keyCode) {\n        case 37:\n          this.setState({ direction: 'LEFT' });\n          break;\n        case 39:\n          this.setState({ direction: 'RIGHT' });\n          break;\n        default:\n          break;\n      }\n    }\n    if (this.state.direction === 'DOWN') {\n      switch (e.keyCode) {\n        case 37:\n          this.setState({ direction: 'LEFT' });\n          break;\n        case 39:\n          this.setState({ direction: 'RIGHT' });\n          break;\n        default:\n          break;\n      }\n    }\n    if (this.state.direction === 'LEFT') {\n      switch (e.keyCode) {\n        case 38:\n          this.setState({ direction: 'UP' });\n          break;\n        case 40:\n          this.setState({ direction: 'DOWN' });\n          break;\n        default:\n          break;\n      }\n    }\n    if (this.state.direction === 'RIGHT') {\n      switch (e.keyCode) {\n        case 38:\n          this.setState({ direction: 'UP' });\n          break;\n        case 40:\n          this.setState({ direction: 'DOWN' });\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  moveSnake = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n    switch (this.state.direction) {\n      case 'RIGHT':\n        head = [head[0] + 2, head[1]];\n        dots.shift();\n        dots.push(head);\n        this.setState({\n          snakeDots: dots\n        })\n        break;\n      case 'DOWN':\n        head = [head[0], head[1] + 2];\n        dots.shift();\n        dots.push(head);\n        this.setState({\n          snakeDots: dots\n        })\n        break;\n      case 'UP':\n        head = [head[0], head[1] - 2];\n        dots.shift();\n        dots.push(head);\n        this.setState({\n          snakeDots: dots\n        })\n        break;\n      case 'LEFT':\n        head = [head[0] - 2, head[1]];\n        dots.shift();\n        dots.push(head);\n        this.setState({\n          snakeDots: dots\n        })\n        break;\n      default:\n        break;\n    }\n\n  }\n  checkIfOutOfBorders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    if (head[0] === 100 || head[1] === 100 || head[0] < 0 || head[1] < 0) {\n      this.onGameOver();\n    }\n  }\n  checkIfCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot => {\n      if (head[0] === dot[0] && head[1] === dot[1])\n        this.onGameOver();\n    })\n  }\n  checkIfEat() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n    if (head[0] === food[0] && head[1] === food[1]) {\n      var f = getRandomCoordinates();\n      var t = getRandomCoordinates();\n      if (f === t)\n        this.setState({\n          food: f,\n          trap: [f[0] + 1, f[1]]\n        })\n      else\n        this.setState({\n          food: f,\n          trap: t\n        })\n      this.enlargeSnake();\n      this.increaseSpeed();\n    }\n  }\n  checkIfTraped() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let trap = this.state.trap;\n    if (head[0] === trap[0] && head[1] === trap[1])\n      this.onGameOver();\n  }\n  enlargeSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([])\n    this.setState({\n      snakeDots: newSnake\n    })\n  }\n  increaseSpeed() {\n    if (this.state.speed > 20) {\n      this.setState({\n        speed: this.state.speed - 20\n      })\n    }\n    else {\n      this.setState({\n        speed: this.state.speed - 2\n      })\n    }\n  }\n\n\n  onGameOver() {\n    if (localStorage.getItem('highscore') === null) {\n      localStorage.setItem('highscore', this.state.snakeDots.length - 2)\n    }\n    else {\n      if (localStorage.getItem('highscore') < this.state.snakeDots.length - 2)\n        localStorage.setItem('highscore', this.state.snakeDots.length - 2)\n    }\n    window.location.reload(false);\n  }\n\n  ToggleChangeMode() {\n    this.setState({ play: true })\n    setInterval(this.moveSnake, this.state.speed)\n  }\n\n  ButtonPlay() {\n    if (!this.state.play && this.state.easy && this.state.medium) {\n      return (\n        <div>\n          <Button onClick={this.ToggleChangeMode.bind(this)} variant=\"contained\" disabled > Play </Button>\n        </div>\n      )\n    }\n    else {\n      return (\n        <div>\n          <Button onClick={this.ToggleChangeMode.bind(this)} variant=\"contained\"  > Play </Button>\n        </div>\n      );\n    }\n\n  }\n  TrapStart = () => {\n    if (this.state.snakeDots.length >= 4) {\n      return (\n        <div>\n          <Trap trap={this.state.trap} />\n        </div>\n      );\n    }\n  };\n\n  changeModeEz = () => {\n    this.setState({\n      easy: !this.state.easy,\n      speed: 100,\n    })\n  };\n\n  changeModeMedium = () => {\n    this.setState({\n      medium: !this.state.medium,\n      speed: 50,\n    })\n  }\n\n  GotoGame = () => {\n    if (!this.state.play) {\n      return (\n        (this.state.easy && this.state.medium) ? this.ShowPreSwitch() : (this.state.easy && !this.state.medium) ? this.ShowSwitchMedium() : this.ShowSwitchEz()\n      )\n    }\n    else {\n      return (\n        this.ShowSwitchPlay()\n      )\n    }\n  }\n\n\n\n\n  ShowPreSwitch = () => {\n    return (\n      <FormGroup row>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={this.state.checkedEasy}\n              value=\"checkedEasy\"\n              onChange={this.changeModeEz}\n            />\n          }\n          label=\"Easy Game\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={this.state.checkedMedium}\n              value=\"checkedMedium\"\n              onChange={this.changeModeMedium}\n              color=\"primary\"\n            />\n          }\n          label=\"Medium\"\n        />\n      </FormGroup>\n    )\n  }\n\n  ShowSwitchEz = () => {\n    return (\n      <FormGroup row>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={this.state.checkedEasy}\n              value=\"checkedEasy\"\n              onChange={this.changeModeEz}\n            />\n          }\n          label=\"Easy Game\"\n        />\n        <FormControlLabel disabled control={<Switch value=\"Medium\" />} label=\"Medium\" />\n      </FormGroup>\n    )\n  }\n\n  ShowSwitchMedium = () => {\n    return (\n      <FormGroup row>\n        <FormControlLabel disabled control={<Switch value=\"Easy\" />} label=\"Easy Game\" />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={this.state.checkedMedium}\n              value=\"checkedMedium\"\n              onChange={this.changeModeMedium}\n              color=\"primary\"\n            />\n          }\n          label=\"Medium\"\n        />\n      </FormGroup>\n    )\n  }\n  ShowSwitchPlay = () => {\n    return (\n      <FormGroup row>\n        <FormControlLabel disabled control={<Switch value=\"Easy\" />} label=\"Easy Game\" />\n        <FormControlLabel disabled control={<Switch value=\"Medium\" />} label=\"Medium\" />\n      </FormGroup>\n    )\n  }\n  MusicPlayNormal = () => {\n    if (this.state.play)\n      return (\n        <audio autoPlay>\n          <source src={Piano} type=\"audio/mp3\" />\n        </audio>\n      )\n  }\n\n\n  render() {\n    const changeBackground1 = {\n      backgroundColor: '#fff',\n      border: '3px solid black',\n\n    };\n    const changeBackground2 = {\n      backgroundColor: 'gray',\n      border: '3px solid black',\n\n    };\n    return (\n      <Container className='container' style={((this.state.snakeDots.length) % 5 === 0) ? changeBackground2 : changeBackground1}>\n        <div>\n          <Button variant=\"contained\" disabled >\n            Max score : {localStorage.getItem('highscore')}\n          </Button>\n        </div>\n        <Grid container>\n          <div className='score'>\n\n            <Button variant=\"contained\" disabled >\n              Score : {this.state.snakeDots.length - 2}\n            </Button>\n\n            <div className='button'>\n              {(!this.state.play) && this.ButtonPlay()}\n            </div>\n          </div>\n          <div className=\"game-area\">\n            <Snake snakeDots={this.state.snakeDots} />\n            <Food dot={this.state.food} />\n            {this.TrapStart()}\n          </div>\n          <div className=\"switch\">\n            {this.GotoGame()}\n          </div>\n        </Grid>\n        {this.MusicPlayNormal()}\n      </Container>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}