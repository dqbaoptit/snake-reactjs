{"ast":null,"code":"var _jsxFileName = \"/Users/oss/Desktop/Git/snake-reactjs/src/App.js\";\nimport React, { Component } from 'react';\nimport { Grid, Button, Container, FormGroup, FormControlLabel, Switch } from '@material-ui/core';\nimport './App.css';\nimport Food from './Food';\nimport Snake from './Snake';\nimport Trap from './Trap';\nimport Sound from './media/gameplay.wav';\n\nconst getRandomCoordinates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  return [x, y];\n};\n\nconst initialState = {\n  food: getRandomCoordinates(),\n  speed: 100,\n  direction: 'RIGHT',\n  snakeDots: [[0, 0], [2, 0]],\n  play: false,\n  trap: getRandomCoordinates(),\n  easy: true,\n  medium: true\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.onKeyDown = e => {\n      e = e || window.event;\n\n      if (this.state.direction === 'UP') {\n        switch (e.keyCode) {\n          case 37:\n            this.setState({\n              direction: 'LEFT'\n            });\n            break;\n\n          case 39:\n            this.setState({\n              direction: 'RIGHT'\n            });\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      if (this.state.direction === 'DOWN') {\n        switch (e.keyCode) {\n          case 37:\n            this.setState({\n              direction: 'LEFT'\n            });\n            break;\n\n          case 39:\n            this.setState({\n              direction: 'RIGHT'\n            });\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      if (this.state.direction === 'LEFT') {\n        switch (e.keyCode) {\n          case 38:\n            this.setState({\n              direction: 'UP'\n            });\n            break;\n\n          case 40:\n            this.setState({\n              direction: 'DOWN'\n            });\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      if (this.state.direction === 'RIGHT') {\n        switch (e.keyCode) {\n          case 38:\n            this.setState({\n              direction: 'UP'\n            });\n            break;\n\n          case 40:\n            this.setState({\n              direction: 'DOWN'\n            });\n            break;\n\n          default:\n            break;\n        }\n      }\n    };\n\n    this.moveSnake = () => {\n      let dots = [...this.state.snakeDots];\n      let head = dots[dots.length - 1];\n\n      switch (this.state.direction) {\n        case 'RIGHT':\n          head = [head[0] + 2, head[1]];\n          dots.shift();\n          dots.push(head);\n          this.setState({\n            snakeDots: dots\n          });\n          break;\n\n        case 'DOWN':\n          head = [head[0], head[1] + 2];\n          dots.shift();\n          dots.push(head);\n          this.setState({\n            snakeDots: dots\n          });\n          break;\n\n        case 'UP':\n          head = [head[0], head[1] - 2];\n          dots.shift();\n          dots.push(head);\n          this.setState({\n            snakeDots: dots\n          });\n          break;\n\n        case 'LEFT':\n          head = [head[0] - 2, head[1]];\n          dots.shift();\n          dots.push(head);\n          this.setState({\n            snakeDots: dots\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.TrapStart = () => {\n      if (this.state.snakeDots.length >= 4) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, React.createElement(Trap, {\n          trap: this.state.trap,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.changeModeEz = () => {\n      this.setState({\n        easy: !this.state.easy,\n        speed: 100\n      });\n    };\n\n    this.changeModeMedium = () => {\n      this.setState({\n        medium: !this.state.medium,\n        speed: 50\n      });\n    };\n\n    this.GotoGame = () => {\n      if (!this.state.play) {\n        return this.state.easy && this.state.medium ? this.ShowPreSwitch() : this.state.easy && !this.state.medium ? this.ShowSwitchMedium() : this.ShowSwitchEz();\n      } else {\n        return this.ShowSwitchPlay();\n      }\n    };\n\n    this.ShowPreSwitch = () => {\n      return React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.checkedEasy,\n          value: \"checkedEasy\",\n          onChange: this.changeModeEz,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }),\n        label: \"Easy Game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.checkedMedium,\n          value: \"checkedMedium\",\n          onChange: this.changeModeMedium,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }),\n        label: \"Medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }));\n    };\n\n    this.ShowSwitchEz = () => {\n      return React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.checkedEasy,\n          value: \"checkedEasy\",\n          onChange: this.changeModeEz,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }),\n        label: \"Easy Game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        disabled: true,\n        control: React.createElement(Switch, {\n          value: \"Medium\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }),\n        label: \"Medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }));\n    };\n\n    this.ShowSwitchMedium = () => {\n      return React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        disabled: true,\n        control: React.createElement(Switch, {\n          value: \"Easy\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318\n          },\n          __self: this\n        }),\n        label: \"Easy Game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.checkedMedium,\n          value: \"checkedMedium\",\n          onChange: this.changeModeMedium,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }),\n        label: \"Medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }));\n    };\n\n    this.ShowSwitchPlay = () => {\n      return React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        disabled: true,\n        control: React.createElement(Switch, {\n          value: \"Easy\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          },\n          __self: this\n        }),\n        label: \"Easy Game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        disabled: true,\n        control: React.createElement(Switch, {\n          value: \"Medium\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        }),\n        label: \"Medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }));\n    };\n\n    this.MusicPlayNormal = () => {\n      if (this.state.play) return React.createElement(\"audio\", {\n        autoPlay: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        src: Sound,\n        type: \"audio/wav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }), React.createElement(\"source\", {\n        src: Piano,\n        type: \"audio/mp3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }));\n    };\n  }\n\n  componentDidMount() {\n    document.onkeydown = this.onKeyDown;\n  }\n\n  componentDidUpdate() {\n    this.checkIfOutOfBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat();\n    this.checkIfTraped();\n  }\n\n  checkIfOutOfBorders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n\n    if (head[0] === 100 || head[1] === 100 || head[0] < 0 || head[1] < 0) {\n      this.onGameOver();\n    }\n  }\n\n  checkIfCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot => {\n      if (head[0] === dot[0] && head[1] === dot[1]) this.onGameOver();\n    });\n  }\n\n  checkIfEat() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n\n    if (head[0] === food[0] && head[1] === food[1]) {\n      var f = getRandomCoordinates();\n      var t = getRandomCoordinates();\n      if (f === t) this.setState({\n        food: f,\n        trap: [f[0] + 1, f[1]]\n      });else this.setState({\n        food: f,\n        trap: t\n      });\n      this.enlargeSnake();\n      this.increaseSpeed();\n    }\n  }\n\n  checkIfTraped() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let trap = this.state.trap;\n    if (head[0] === trap[0] && head[1] === trap[1]) this.onGameOver();\n  }\n\n  enlargeSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([]);\n    this.setState({\n      snakeDots: newSnake\n    });\n  }\n\n  increaseSpeed() {\n    if (this.state.speed > 20) {\n      this.setState({\n        speed: this.state.speed - 20\n      });\n    } else {\n      this.setState({\n        speed: this.state.speed - 2\n      });\n    }\n  }\n\n  onGameOver() {\n    window.location.reload(false);\n  }\n\n  ToggleChangeMode() {\n    this.setState({\n      play: true\n    });\n    setInterval(this.moveSnake, this.state.speed);\n  }\n\n  ButtonPlay() {\n    if (!this.state.play && this.state.easy && this.state.medium) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.ToggleChangeMode.bind(this),\n        variant: \"contained\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \" Play \"));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.ToggleChangeMode.bind(this),\n        variant: \"contained\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \" Play \"));\n    }\n  }\n\n  render() {\n    const changeBackground1 = {\n      backgroundColor: '#fff',\n      border: '3px solid black'\n    };\n    const changeBackground2 = {\n      backgroundColor: 'gray',\n      border: '3px solid black'\n    };\n    return React.createElement(Container, {\n      className: \"container\",\n      style: this.state.snakeDots.length % 5 === 0 ? changeBackground2 : changeBackground1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \"Score : \", this.state.snakeDots.length - 2), React.createElement(\"div\", {\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, !this.state.play && this.ButtonPlay())), React.createElement(\"div\", {\n      className: \"game-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(Snake, {\n      snakeDots: this.state.snakeDots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }), React.createElement(Food, {\n      dot: this.state.food,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }), this.TrapStart()), React.createElement(\"div\", {\n      className: \"switch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, this.GotoGame())), this.MusicPlayNormal());\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/oss/Desktop/Git/snake-reactjs/src/App.js"],"names":["React","Component","Grid","Button","Container","FormGroup","FormControlLabel","Switch","Food","Snake","Trap","Sound","getRandomCoordinates","min","max","x","Math","floor","random","y","initialState","food","speed","direction","snakeDots","play","trap","easy","medium","App","state","onKeyDown","e","window","event","keyCode","setState","moveSnake","dots","head","length","shift","push","TrapStart","changeModeEz","changeModeMedium","GotoGame","ShowPreSwitch","ShowSwitchMedium","ShowSwitchEz","ShowSwitchPlay","checkedEasy","checkedMedium","MusicPlayNormal","Piano","componentDidMount","document","onkeydown","componentDidUpdate","checkIfOutOfBorders","checkIfCollapsed","checkIfEat","checkIfTraped","onGameOver","snake","pop","forEach","dot","f","t","enlargeSnake","increaseSpeed","newSnake","unshift","location","reload","ToggleChangeMode","setInterval","ButtonPlay","bind","render","changeBackground1","backgroundColor","border","changeBackground2"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Grid, Button, Container, FormGroup, FormControlLabel, Switch} from '@material-ui/core';\nimport './App.css';\nimport Food from'./Food';\nimport Snake from './Snake';\nimport Trap from './Trap';\nimport Sound from './media/gameplay.wav';\n\nconst getRandomCoordinates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n  let y =  Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n  return [x,y]\n}\nconst initialState = {\n  food: getRandomCoordinates(),\n  speed: 100,\n  direction: 'RIGHT',\n  snakeDots: [\n    [0,0],\n    [2,0]\n  ],\n  play : false,\n  trap : getRandomCoordinates(),\n  easy : true,\n  medium : true,\n}\n\nclass App extends Component {\n  state = initialState;\n  componentDidMount() {\n    document.onkeydown = this.onKeyDown;\n  }\n\n  componentDidUpdate() {\n    this.checkIfOutOfBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat();\n    this.checkIfTraped();\n  }\n\n\n  onKeyDown = (e) => {\n    e = e || window.event;\n    if(this.state.direction === 'UP')\n      {\n        switch (e.keyCode) {\n        case 37:\n          this.setState({direction: 'LEFT'});\n          break;\n        case 39:\n          this.setState({direction: 'RIGHT'});\n          break;\n        default:\n          break;\n      }\n    }\n  if(this.state.direction === 'DOWN')\n    {\n      switch (e.keyCode) {\n      case 37:\n        this.setState({direction: 'LEFT'});\n        break;\n      case 39:\n        this.setState({direction: 'RIGHT'});\n        break;\n      default:\n        break;\n    }\n  }\n  if(this.state.direction === 'LEFT')\n    {\n      switch (e.keyCode) {\n      case 38:\n        this.setState({direction: 'UP'});\n        break;\n      case 40:\n        this.setState({direction: 'DOWN'});\n        break;\n      default:\n        break;\n    }\n  }\n  if(this.state.direction === 'RIGHT')\n    {\n      switch (e.keyCode) {\n      case 38:\n        this.setState({direction: 'UP'});\n        break;\n      case 40:\n        this.setState({direction: 'DOWN'});\n        break;\n      default:\n        break;\n    }\n  }\n    }\n  moveSnake = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n      switch (this.state.direction) {\n        case 'RIGHT':\n          head = [head[0] + 2, head[1]];\n          dots.shift();\n          dots.push(head);\n          this.setState({\n            snakeDots: dots\n          })\n          break;\n        case 'DOWN':\n          head = [head[0], head[1] + 2];\n          dots.shift();\n          dots.push(head);\n          this.setState({\n            snakeDots: dots\n          })\n          break;\n        case 'UP':\n          head = [head[0], head[1] - 2];\n          dots.shift();\n          dots.push(head);\n          this.setState({\n            snakeDots: dots\n          })\n          break;\n        case 'LEFT':\n          head = [head[0] - 2, head[1]];\n          dots.shift();\n          dots.push(head);\n          this.setState({\n            snakeDots: dots\n          })\n          break;\n        default:\n          break;\n        }\n\n  }\n  checkIfOutOfBorders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    if (head[0] === 100 || head[1] === 100 || head[0] < 0 || head[1] < 0) {\n      this.onGameOver();\n    }\n  }\n   checkIfCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot=>{\n      if(head[0]===dot[0] && head[1]===dot[1])\n      this.onGameOver();\n    })\n  }\n  checkIfEat() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n    if (head[0] === food[0] && head[1] === food[1]) {\n      var f = getRandomCoordinates();\n      var t = getRandomCoordinates();\n      if(f === t)\n      this.setState({\n        food: f,\n        trap: [f[0]+1,f[1]]\n      })\n      else\n      this.setState({\n        food: f,\n        trap: t\n      })\n      this.enlargeSnake();\n      this.increaseSpeed();\n    }\n  }\n  checkIfTraped() {\n    let head = this.state.snakeDots[this.state.snakeDots.length-1];\n    let trap = this.state.trap;\n    if(head[0]===trap[0] && head[1]===trap[1])\n        this.onGameOver();\n  }\n  enlargeSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([])\n    this.setState({\n      snakeDots: newSnake\n    })\n  }\n  increaseSpeed() {\n    if (this.state.speed > 20) {\n      this.setState({\n        speed: this.state.speed - 20\n      })\n    }\n    else{\n      this.setState({\n        speed: this.state.speed - 2\n      })\n    }\n  }\n\n\n  onGameOver() {\n    window.location.reload(false);\n    }\n\n  ToggleChangeMode(){\n    this.setState({play:true})\n    setInterval(this.moveSnake, this.state.speed)\n  }\n\n   ButtonPlay() {\n    if(!this.state.play && this.state.easy && this.state.medium){\n    return(\n      <div>\n        <Button onClick={this.ToggleChangeMode.bind(this)}  variant=\"contained\" disabled > Play </Button>\n      </div>\n    )}\n    else{\n      return(\n        <div>\n          <Button onClick={this.ToggleChangeMode.bind(this)}  variant=\"contained\"  > Play </Button>\n        </div>\n      );\n    }\n\n  }\n  TrapStart = () =>{\n    if(this.state.snakeDots.length >= 4)\n    {\n      return (\n        <div>\n          <Trap trap={this.state.trap} />\n        </div>\n      );\n    }\n  };\n\n  changeModeEz = () => {\n    this.setState({\n      easy:!this.state.easy,\n      speed:100,\n    })\n  };\n\n  changeModeMedium = () =>{\n    this.setState({\n      medium:!this.state.medium,\n      speed:50,\n    })\n  }\n\n  GotoGame = () =>{\n    if(!this.state.play)\n    {\n      return(\n        (this.state.easy && this.state.medium )?this.ShowPreSwitch():(this.state.easy && !this.state.medium )?this.ShowSwitchMedium():this.ShowSwitchEz()\n      )\n    }\n    else{\n      return(\n        this.ShowSwitchPlay()\n      )\n    }\n  }\n\n\n\n\n  ShowPreSwitch = () =>{\n    return(\n    <FormGroup row>\n      <FormControlLabel\n        control={\n          <Switch\n           checked={this.state.checkedEasy}\n           value=\"checkedEasy\"\n           onChange={this.changeModeEz}\n          />\n        }\n        label=\"Easy Game\"\n      />\n      <FormControlLabel\n        control={\n          <Switch\n            checked={this.state.checkedMedium}\n            value=\"checkedMedium\"\n            onChange={this.changeModeMedium}\n            color=\"primary\"\n          />\n        }\n        label=\"Medium\"\n      />\n    </FormGroup>\n  )\n  }\n\n  ShowSwitchEz = () =>{\n    return(\n    <FormGroup row>\n      <FormControlLabel\n        control={\n          <Switch\n           checked={this.state.checkedEasy}\n           value=\"checkedEasy\"\n           onChange={this.changeModeEz}\n          />\n        }\n        label=\"Easy Game\"\n      />\n    <FormControlLabel disabled control={<Switch value=\"Medium\" />} label=\"Medium\" />\n    </FormGroup>\n  )\n  }\n\n  ShowSwitchMedium = () =>{\n    return(\n    <FormGroup row>\n      <FormControlLabel disabled control={<Switch value=\"Easy\" />} label=\"Easy Game\" />\n      <FormControlLabel\n        control={\n          <Switch\n            checked={this.state.checkedMedium}\n            value=\"checkedMedium\"\n            onChange={this.changeModeMedium}\n            color=\"primary\"\n          />\n        }\n        label=\"Medium\"\n      />\n    </FormGroup>\n  )\n  }\n  ShowSwitchPlay = ()=>{\n    return(\n      <FormGroup row>\n        <FormControlLabel disabled control={<Switch value=\"Easy\" />} label=\"Easy Game\" />\n        <FormControlLabel disabled control={<Switch value=\"Medium\" />} label=\"Medium\" />\n      </FormGroup>\n    )\n  }\n  MusicPlayNormal = () =>{\n    if(this.state.play)\n    return(\n      <audio autoPlay>\n        <source src={Sound} type=\"audio/wav\" />\n        <source src={Piano} type=\"audio/mp3\" />\n      </audio>\n    )\n  }\n\n\n  render(){\n    const changeBackground1={\n      backgroundColor:'#fff',\n      border: '3px solid black',\n\n    };\n    const changeBackground2={\n      backgroundColor:'gray',\n      border: '3px solid black',\n\n    };\n    return (\n      <Container className='container' style={((this.state.snakeDots.length)%5===0)?changeBackground2:changeBackground1}>\n        <Grid container>\n          <div className='score'>\n            <Button variant=\"contained\" disabled >\n              Score : {this.state.snakeDots.length -2 }\n            </Button>\n            <div className='button'>\n              {(!this.state.play)&&this.ButtonPlay()}\n            </div>\n          </div>\n          <div className=\"game-area\">\n            <Snake snakeDots={this.state.snakeDots}/>\n            <Food dot={this.state.food}/>\n            {this.TrapStart()}\n          </div>\n          <div className=\"switch\">\n            {this.GotoGame()}\n          </div>\n        </Grid>\n        {this.MusicPlayNormal()}\n      </Container>\n\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}